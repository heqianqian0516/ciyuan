// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"

buildscript {
    ext.kotlin_version = '1.3.21'
    ext.anko_version = '0.10.8'
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
//        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
//        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
//        maven { url 'https://maven.aliyun.com/nexus/content/repositories/central' }
//        google()
        jcenter()
//        mavenCentral()
        maven { url 'https://jitpack.io' }
        google()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        //GreenDao3依赖
//        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        //sophix 热更新
        classpath 'com.aliyun.ams:alicloud-android-hotfix:3.1.9'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.jakewharton:butterknife-gradle-plugin:10.1.0'
        classpath 'com.tencent.bugly:symtabfileuploader:2.1.0'

    }
}

allprojects {
    repositories {

        flatDir {
            dirs 'libs'
        }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
//        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
//        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
//        maven { url 'https://maven.aliyun.com/nexus/content/repositories/central' }
        google()
        jcenter()
//        mavenCentral()
        maven { url 'https://jitpack.io' }
//        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://dl.bintray.com/umsdk/release' }
    }
}

//是否是执行Debug相关task (通用函数, 可供子module调用)
def isDebug() {
    def taskNames = gradle.startParameter.taskNames
    for (tn in taskNames) {
        if ((tn.contains("install") || tn.contains("assemble")) && tn.contains("Debug")) {
            return true
        }
    }
    return false
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
